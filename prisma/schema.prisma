// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  role      String   @default("user")
  queue QueueItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Song {
  id          Int      @id @default(autoincrement())
  title       String
  artist      String
  album       String
  lyrics      Json
  cover       String
  duration    Int
  filePath    String   
  fileHash    String  
  playCount   Int @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  @@unique([filePath,fileHash])
  queueItems QueueItem[]
}

model Config {
  id    Int    @id @default(autoincrement())
  key   String @unique
  value String
}

model QueueItem{
  id Int @id @default(autoincrement())
  user User @relation(fields:[userId],references:[id],onDelete:Cascade)
  userId Int
  song Song @relation(fields:[songId],references:[id],onDelete:Cascade)
  songId Int
  position Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  @@unique([userId,position])
  @@unique([userId,songId])
  @@index([userId])
}